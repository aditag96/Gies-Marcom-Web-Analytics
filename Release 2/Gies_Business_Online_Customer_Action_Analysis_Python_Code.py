# -*- coding: utf-8 -*-
"""Customer Journey.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e6Tsu9dU0AZiOqKTQEAAHJEQFkGdoBRt

# Gies Business and Online Customer Action Data Analysis

**Load Required Libraries and Data Extracted from Google Analytics**
"""

import pandas as pd

# Attempt to read with ISO-8859-1 encoding
business_df = pd.read_csv("Gies_Business_Customer_Journey.csv", encoding="ISO-8859-1")
online_df = pd.read_csv("Gies_Online_Customer_Journey.csv", encoding="ISO-8859-1")

# Display the first few rows
print(business_df.head())
print(online_df.head())

business_df = business_df.dropna()
online_df = online_df.dropna()

# Check for missing values
business_df.isnull().sum()
online_df.isnull().sum()

"""**Top 10 Events in Business vs. Online Journeys**"""

# For the business dataset
business_event_counts = business_df['Event name'].value_counts().reset_index()
business_event_counts.columns = ['Event name', 'Frequency']
print(business_event_counts.head(10))  # Top 10 events

# For the online dataset
online_event_counts = online_df['Event name'].value_counts().reset_index()
online_event_counts.columns = ['Event name', 'Frequency']
print(online_event_counts.head(10))   # Top 10 events

import matplotlib.pyplot as plt
import seaborn as sns

# Plot top 10 events for business
top_10_business = business_event_counts.head(10)
plt.figure(figsize=(10,6))
sns.barplot(data=top_10_business, x='Frequency', y='Event name', color='blue')
plt.title('Top 10 Events (Business)')
plt.xlabel('Frequency')
plt.ylabel('Event Name')
plt.show()

# Plot top 10 events for online
top_10_online = online_event_counts.head(10)
plt.figure(figsize=(10,6))
sns.barplot(data=top_10_online, x='Frequency', y='Event name', color='orange')
plt.title('Top 10 Events (Online)')
plt.xlabel('Frequency')
plt.ylabel('Event Name')
plt.show()

"""**ANALYSIS**

"page_view," "session_start," and "first_visit" dominate both datasets, showing a focus on initial visits and page views.
In Business, events like "file_download" and "click_apply_grad" appear, while Online features "form_start" and "video-start," reflecting different user pathways. "generate_lead" appears in both but less frequently, suggesting a smaller subset of users proceed to lead-generating actions.

**Analyzing Top Page Locations**
"""

# For the business dataset
business_page_counts = (
    business_df.groupby('Page location', as_index=False)['Event count'].sum()
    .sort_values(by='Event count', ascending=False)
)

# For the online dataset
online_page_counts = (
    online_df.groupby('Page location', as_index=False)['Event count'].sum()
    .sort_values(by='Event count', ascending=False)
)

# Display the top rows
print("Top Business Page Locations:")
print(business_page_counts.head(10))

print("\nTop Online Page Locations:")
print(online_page_counts.head(10))

import matplotlib.pyplot as plt
import seaborn as sns

# Take the top 10 for Business
top_10_business_pages = business_page_counts.head(10)
plt.figure(figsize=(10,6))
sns.barplot(data=top_10_business_pages, x='Event count', y='Page location', color='green')
plt.title('Top 10 Page Locations (Business)')
plt.xlabel('Total Event Count')
plt.ylabel('Page Location')
plt.show()

# Take the top 10 for Online
top_10_online_pages = online_page_counts.head(10)
plt.figure(figsize=(10,6))
sns.barplot(data=top_10_online_pages, x='Event count', y='Page location', color='red')
plt.title('Top 10 Page Locations (Online)')
plt.xlabel('Total Event Count')
plt.ylabel('Page Location')
plt.show()

"""**Top Page Locations: Concise Observations**

- **Gies Business**:  
  The main homepage draws the most traffic, serving as a central hub. Specialized graduate program pages (e.g., MSF, Business Analytics, MSBA) also see high engagement, indicating strong interest in advanced studies. Admissions and undergrad “majors-and-minors” pages rank well, reflecting interest across multiple academic levels.

- **Gies Online**:  
  The iMBA and its curriculum pages dominate, highlighting the program’s appeal. Admissions, performance-based admissions tracks, and tuition cost pages also rank high, emphasizing prospective students’ focus on enrollment feasibility and affordability.

**Comparing User Engagement by Event Type Over Time**
"""

# Example events to analyze
events_of_interest = ["page_view", "session_start", "form_submit"]
# Filter Business dataset for selected events
business_filtered = business_df[business_df['Event name'].isin(events_of_interest)]

# Group by date and event name, then sum event counts
business_event_trends = (
    business_filtered
    .groupby(['Date', 'Event name'], as_index=False)['Event count']
    .sum()
)

# Same process for Online dataset
online_filtered = online_df[online_df['Event name'].isin(events_of_interest)]
online_event_trends = (
    online_filtered
    .groupby(['Date', 'Event name'], as_index=False)['Event count']
    .sum()
)
import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(12,6))
sns.lineplot(data=business_event_trends, x='Date', y='Event count', hue='Event name', palette='tab10')
plt.title("Business: Key Events Over Time")
plt.xlabel("Date")
plt.ylabel("Total Event Count")
plt.xticks(rotation=45)
plt.legend(title="Event Name")
plt.show()

plt.figure(figsize=(12,6))
sns.lineplot(data=online_event_trends, x='Date', y='Event count', hue='Event name', palette='tab10')
plt.title("Online: Key Events Over Time")
plt.xlabel("Date")
plt.ylabel("Total Event Count")
plt.xticks(rotation=45)
plt.legend(title="Event Name")
plt.show()

"""**Business Dataset**

“page_view” consistently outperforms “session_start”, indicating users typically browse multiple pages once a session begins.
Both metrics show a gradual decline over time, with occasional spikes suggesting possible promotional or academic calendar influences.

**Online Dataset**

“page_view” again dominates, while “form_submit” remains minimal, pointing to a lower direct conversion rate or potential data-collection gaps.
“session_start” trends remain below “page_view” but show moderate fluctuation, hinting at consistent user inflow with varying engagement levels.

**High-Level Machine Learning Approach: User Segmentation**
"""

import pandas as pd

# Suppose business_df has columns: ['Date', 'Page location', 'Event count', ...]
# Summarize total event counts, number of active days, etc.
page_df = business_df.groupby('Page location', as_index=False).agg({
    'Event count': 'sum',         # total events on this page
    'Date': 'nunique',           # how many unique dates had events
    # Add more metrics as needed
})

page_df.rename(columns={'Event count': 'total_events', 'Date': 'active_days'}, inplace=True)

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
page_features = ['total_events', 'active_days']
page_df[page_features] = scaler.fit_transform(page_df[page_features])

from sklearn.cluster import KMeans

kmeans = KMeans(n_clusters=3, random_state=42)
page_df['cluster'] = kmeans.fit_predict(page_df[page_features])

print(page_df.head())

cluster_summary = page_df.groupby('cluster')[page_features].mean()
print(cluster_summary)

"""1. **Cluster 0 (Low Engagement)**  
   - Below-average traffic (negative `total_events`) and near-average active days.  
   - These pages see relatively **few total events** despite being accessed somewhat regularly.

2. **Cluster 1 (Moderate/High Engagement)**  
   - Above-average traffic (`total_events`) and **significantly more active days** than average.  
   - Indicates a group of **consistently visited** pages that perform well but aren’t extreme outliers.

3. **Cluster 2 (Extreme Outlier)**  
   - Very large positive values in both `total_events` and `active_days`.  
   - Likely the **homepage or key landing pages** that dominate traffic and remain active on nearly every tracked day.

### **Actionable Points**
- **Cluster 0**: Consider refreshing or better promoting these pages if they are strategically important, or retire them if they’re not adding value.  
- **Cluster 1**: Optimize for conversions or user engagement since these pages have stable traffic.  
- **Cluster 2**: Ensure the high-traffic pages deliver a strong user experience and clear calls to action, as they likely drive the most impact.

"""